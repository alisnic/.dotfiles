# Configuration for Alacritty, the GPU enhanced terminal emulator
scrolling:
  history: 0

# The FreeType rasterizer needs to know the device DPI for best results
# (changes require restart)
# dpi:
#   x: 96.0
#   y: 96.0

# Display tabs using this many cells (changes require restart)
# tabspaces: 8

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

url:
  modifiers: Command

window:
  startup_mode: Maximized

font:
  normal:
    family: RobotoMono Nerd Font
    style: Regular

  bold:
    family: RobotoMono Nerd Font
    style: Medium

  italic:
    family: RobotoMono Nerd Font
    style: Italic

  # Point size of the font
  size: 16

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  # offset:
  #   x: 0
  #   y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  # glyph_offset:
  #   x: 0
  #   y: 0

  use_thin_strokes: true

# Should display the render timer
# render_timer: false

# Colors (Solarized Light)
# colors:
#   # Default colors
#   primary:
#     background: "0xfdf6e3"
#     foreground: "0x586e75"
#
#   # Normal colors
#   normal:
#     black: "0x073642"
#     red: "0xdc322f"
#     green: "0x859900"
#     yellow: "0xb58900"
#     blue: "0x268bd2"
#     magenta: "0xd33682"
#     cyan: "0x2aa198"
#     white: "0xeee8d5"
#
#   # Bright colors
#   bright:
#     black: "0x002b36"
#     red: "0xcb4b16"
#     green: "0x586e75"
#     yellow: "0x657b83"
#     blue: "0x839496"
#     magenta: "0x6c71c4"
#     cyan: "0x93a1a1"
#     white: "0xfdf6e3"

# Colors (Gruvbox dark)
colors:
  # Default colors
  primary:
    # hard contrast: background = '0x1d2021'
    # contrast: background = '0x282828'
    background: '0x282828'
    # soft contrast: background = '0x32302f'
    # contrast: background = '0xebdbb2'
    foreground: '0xebdbb2'

  # Normal colors
  normal:
    black:   '0x282828'
    red:     '0xcc241d'
    green:   '0x98971a'
    yellow:  '0xd79921'
    blue:    '0x458588'
    magenta: '0xb16286'
    cyan:    '0x689d6a'
    white:   '0xa89984'

  # Bright colors
  bright:
    black:   '0x928374'
    red:     '0xfb4934'
    green:   '0xb8bb26'
    yellow:  '0xfabd2f'
    blue:    '0x83a598'
    magenta: '0xd3869b'
    cyan:    '0x8ec07c'
    white:   '0xebdbb2'

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action` or `chars` field must be present. `chars` writes the
# specified string every time that binding is activated. These should generally
# be escape sequences, but they can be configured to send arbitrary strings of
# bytes. Possible values of `action` include `Paste` and `PasteSelection`.
key_bindings:
  - { key: J, mods: Command, action: SpawnNewInstance }
  - { key: Q, mods: Command, action: Quit }
  - { key: V, mods: Command, action: Paste }
  - { key: C, mods: Command, action: Copy }
  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  - { key: F, mods: Command, chars: "\x02/" }
  - { key: D, mods: Command, chars: "\x02\\" }
  - { key: T, mods: Command, chars: "\x02c" }
  - { key: W, mods: Command, chars: "\x02x" }
  - { key: Key1, mods: Command, chars: "\x021" }
  - { key: Key2, mods: Command, chars: "\x022" }
  - { key: Key3, mods: Command, chars: "\x023" }
  - { key: Key4, mods: Command, chars: "\x024" }
  - { key: Key5, mods: Command, chars: "\x025" }
  - { key: Key6, mods: Command, chars: "\x026" }
  - { key: Key7, mods: Command, chars: "\x027" }
  - { key: Key8, mods: Command, chars: "\x028" }
  - { key: Key9, mods: Command, chars: "\x029" }
  - { key: LBracket, mods: Command, chars: "\x02\x70" }
  - { key: RBracket, mods: Command, chars: "\x02\x6e" }
  - { key: Back, mods: Alt, chars: "\x17" }
  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
  - { key: Left, chars: "\x1bOD", mode: AppCursor }
  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
  - { key: Right, chars: "\x1bOC", mode: AppCursor }
  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
  - { key: Up, chars: "\x1bOA", mode: AppCursor }
  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
  - { key: Down, chars: "\x1bOB", mode: AppCursor }
  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
  - { key: Back, chars: "\x7f" }
  - { key: Delete, chars: "\x1b[3~", mode: AppKeypad }
  - { key: Delete, chars: "\x1b[P", mode: ~AppKeypad }
